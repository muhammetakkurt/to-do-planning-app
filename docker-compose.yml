version: "3.8"

#Docker Networks
networks:
  laravel:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local

# Workflow
services:
  nginx:
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    container_name: ${APP_NAME}_nginx
    ports:
      - "${NGINX_PORT}:80"
      # Port for xdebug (ensure this matches the remote_port in the xdebug.ini)
      - "${PHP_XDEBUG_PORT}:9001"
    volumes:
      - ./source:/var/www/html:delegated
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:8
    container_name: "${APP_NAME}_db_server"
    restart: unless-stopped
    command:
      - "--character-set-server=utf8mb4"
      - "--default-authentication-plugin=mysql_native_password"
    tty: true
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./compose/mysql/data:/var/lib/compose/mysql/:rw,delegated
      - ./compose/mysql/conf/my.cnf:/etc/mysql/my.cnf
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_NAME}_phpmyadmin
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      PMA_HOST: mysql
      PMA_ARBITRARY: 1
      PMA_USER: root
      PMA_PASSWORD: root
      UPLOAD_LIMIT: 300M
    restart: always
    depends_on:
      - mysql
    ports:
      - "${PHP_MYADMIN_PORT}:80"
    volumes:
      - /sessions
    networks:
      - laravel
    links:
      - mysql

  php:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: ${APP_NAME}_php
    volumes:
      - ./source:/var/www/html:delegated
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: ./compose/php/composer/Dockerfile
    container_name: ${APP_NAME}_composer
    volumes:
      - ./source:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: ["composer", "--ignore-platform-reqs"]

  artisan:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: ${APP_NAME}_artisan
    volumes:
      - ./source:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel
